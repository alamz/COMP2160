//Green-Blinky 
//main.c
//Author : zhou zhou  Date: 12/09/2017
//**************************************************************************
//This example code Runs on the TM4C1294XL microcontroller
//The code shows how to setup PN0 as a output and send signal to 
//the on-board LED D2
// This example uses the following I/O signals.
// - GPIO - PN0
// - GPIO - PJ0
//**************************************************************************


#include "tm4c1294NCPDT.h"

// register address definition
#define GPIO_PORTN_DATA_R (*((volatile uint32_t *) 0x40064000))//data register
#define GPIO_PORTN_DIR_R (*((volatile uint32_t *) 0x40064400))//direction register
#define GPIO_PORTN_DEN_R (*((volatile uint32_t *) 0x4006451C))//digital enable register

#define GPIO_PORTJ_DATA_R (*((volatile uint32_t *) 0x40060000)) //data register for Port J Pin 0
#define GPIO_PORTJ_DIR_R (*((volatile uint32_t *) 0x40060400))//direction register for port j pin 0
#define GPIO_PORTJ_DEN_R (*((volatile uint32_t *) 0x4006051C)) //Digital Enable Register for Port J Pin 0

#define SYSCTL_RCGCGPIO_R (*((volatile uint32_t *) 0x400FF608))//General-Purpose Input/Output Run Mode Clock Gating Control register

void delay(void);// if you define a function after where it is used, you need to declare the function at front of file

int main(){
	// 1. activate clock for port N and J
  SYSCTL_RCGCGPIO_R = 0x00001100;
	while((SYSCTL_RCGCGPIO_R &0x1000) ==0){} //RCGCGPIO takes about 4 cycles to be set

	// 2. Set direction
	GPIO_PORTN_DIR_R = 0x00000001;
		
	GPIO_PORTJ_DIR_R = 0x00000002; //SW1[PJ0] and SW2[PJ1] configured as Input

		// 3. enable digital port
	GPIO_PORTN_DEN_R = 0x00000001;
	GPIO_PORTJ_DEN_R = 0x00000001; 
	
	if(GPIO_PORTJ_DATA_R == 0)
		GPIO_PORTN_DATA_R = 0X00000001; // LED On
	else 
			GPIO_PORTN_DATA_R = 0X00000000;// LED Off
}

 void delay(void){
  int counter = 0;
  while(counter<1000000){
		 counter++;
	}
}
